version: "3.7"

services:

  db:
    image: postgres:14
    restart: always
    volumes:
      - postgress_db:/var/lib/postgresql/data

    environment:
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: "10s"
      timeout: "5s"
      retries: 5
      start_period: "10s"

  bfportal_gg_production:
    image: docker.pkg.github.com/battlefield-portal-community/bfportal.gg/main:latest
    restart: always
    command: bash -c "python manage.py migrate --noinput && python manage.py ensure_superuser --username bfportal --email superuser@bfportal.com --password '${SU_PASSWD}' &&  python manage.py ensure_initialization && python manage.py runserver 0.0.0.0:${PRODUCTION_PORT} --settings=bfportal.settings.production"
    user: "33:33"
    ports:
      - "${PRODUCTION_PORT}:${PRODUCTION_PORT}"
    volumes:
      - type: "bind"
        source: /var/www/bfportal-media
        target: /app/media
    environment:
      - PRODUCTION_KEY=${PRODUCTION_KEY}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_SECRET=${DISCORD_SECRET}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST=db # takes precedent over .env file
      - DEBUG=${DEBUG}
      - APPROVAL_CHANNEL_WEBHOOK_TOKEN=${APPROVAL_CHANNEL_WEBHOOK_TOKEN}
      - APPROVAL_CHANNEL_WEBHOOK_ID=${APPROVAL_CHANNEL_WEBHOOK_ID}
      - APPROVAL_SUCCESS_CHANNEL_WEBHOOK_TOKEN=${APPROVAL_SUCCESS_CHANNEL_WEBHOOK_TOKEN}
      - APPROVAL_SUCCESS_CHANNEL_WEBHOOK_ID=${APPROVAL_SUCCESS_CHANNEL_WEBHOOK_ID}
      - PRODUCTION_HOST=${PRODUCTION_HOST}
      - PRODUCTION_PORT=${PRODUCTION_PORT}
      - OWNERS=${OWNERS}
    depends_on:
      - db
    healthcheck:
      test: curl -fk http://0.0.0.0:${PRODUCTION_PORT}/ || exit 1
      interval: "60s"
      timeout: "3s"
      retries: 3
      start_period: "5s"

  db_devel:
    image: postgres:14
    restart: always
    volumes:
      - postgress_db_devel:/var/lib/postgresql/data

    environment:
      - POSTGRES_NAME=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: "10s"
      timeout: "5s"
      retries: 5
      start_period: "10s"

  bfportal_gg_dev:
    image: docker.pkg.github.com/battlefield-portal-community/bfportal.gg/dev:latest
    restart: always
    command: bash -c "python manage.py migrate --noinput && python manage.py ensure_superuser --username bfportal --email superuser@bfportal.com --password '${SU_PASSWD}' &&  python manage.py ensure_initialization && gunicorn bfportal.wsgi:application --workers 4 --bind 0.0.0.0:${DEVEL_PORT}"
    user: "33:33"
    ports:
      - "${DEVEL_PORT}:${DEVEL_PORT}"
    volumes:
      - type: "bind"
        source: /var/www/bfportal-devel-media
        target: /app/media
    environment:
      - PRODUCTION_KEY=${PRODUCTION_KEY}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_SECRET=${DISCORD_SECRET}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST=db_devel # takes precedent over .env file
      - DEBUG=True
      - APPROVAL_CHANNEL_WEBHOOK_TOKEN=${APPROVAL_CHANNEL_WEBHOOK_TOKEN}
      - APPROVAL_CHANNEL_WEBHOOK_ID=${APPROVAL_CHANNEL_WEBHOOK_ID}
      - APPROVAL_SUCCESS_CHANNEL_WEBHOOK_TOKEN=${APPROVAL_SUCCESS_CHANNEL_WEBHOOK_TOKEN}
      - APPROVAL_SUCCESS_CHANNEL_WEBHOOK_ID=${APPROVAL_SUCCESS_CHANNEL_WEBHOOK_ID}
      - PRODUCTION_HOST=${PRODUCTION_HOST}
      - PRODUCTION_PORT=${PRODUCTION_PORT}
      - OWNERS=${OWNERS}
      - DEVEL_PORT=${DEVEL_PORT}
    depends_on:
      - db_devel
    healthcheck:
      test: curl -fk http://0.0.0.0:${DEVEL_PORT}/ || exit 1
      interval: "60s"
      timeout: "3s"
      retries: 3
      start_period: "5s"

volumes:
  postgress_db_devel:
  postgress_db:
